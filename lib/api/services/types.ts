/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    stores: Store;
    products: Product;
    categories: Category;
    tags: Tag;
    orders: Order;
    customers: Customer;
    'customer-tags': CustomerTag;
    discounts: Discount;
    collections: Collection;
    pushCampaigns: PushCampaign;
    deviceTokens: DeviceToken;
    home_layouts: HomeLayout;
    cart: Cart;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    stores: StoresSelect<false> | StoresSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    tags: TagsSelect<false> | TagsSelect<true>;
    orders: OrdersSelect<false> | OrdersSelect<true>;
    customers: CustomersSelect<false> | CustomersSelect<true>;
    'customer-tags': CustomerTagsSelect<false> | CustomerTagsSelect<true>;
    discounts: DiscountsSelect<false> | DiscountsSelect<true>;
    collections: CollectionsSelect<false> | CollectionsSelect<true>;
    pushCampaigns: PushCampaignsSelect<false> | PushCampaignsSelect<true>;
    deviceTokens: DeviceTokensSelect<false> | DeviceTokensSelect<true>;
    home_layouts: HomeLayoutsSelect<false> | HomeLayoutsSelect<true>;
    cart: CartSelect<false> | CartSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name: string;
  /**
   * Stores this user has access to
   */
  stores?: (number | Store)[] | null;
  /**
   * Super Admin: Can create stores and assign owners. Store Owner: Manages a single store. Staff: Limited store access. Customer: No admin access.
   */
  role: 'admin' | 'store-owner' | 'store-staff' | 'customer';
  phone?: string | null;
  avatar?: (number | null) | Media;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "stores".
 */
export interface Store {
  id: number;
  name: string;
  domain: string;
  /**
   * Owner of this store. A user can only own one store.
   */
  owner: number | User;
  logo?: (number | null) | Media;
  description?: string | null;
  settings?: {
    currency?: ('usd' | 'eur' | 'gbp' | 'inr') | null;
    timezone?: string | null;
    emailNotifications?: boolean | null;
  };
  businessDetails: {
    phone: string;
    category: string;
    subcategory: string;
    address: {
      street1: string;
      street2: string;
      city: string;
      state: string;
      postal_code: string;
      country: string;
    };
  };
  active?: boolean | null;
  razorpay?: {
    /**
     * Razorpay sub-account ID for payouts via Routes
     */
    accountId?: string | null;
    /**
     * Platform commission percentage
     */
    defaultCommissionPercent?: number | null;
  };
  storeId?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: number;
  title: string;
  store: number | Store;
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  price: number;
  /**
   * Original price for sale items
   */
  compareAtPrice?: number | null;
  status: 'draft' | 'active' | 'archived';
  categories?: (number | Category)[] | null;
  tags?: (number | Tag)[] | null;
  images?:
    | {
        image: number | Media;
        alt: string;
        isPrimary?: boolean | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Add variants like different sizes, colors, etc.
   */
  variants?:
    | {
        title: string;
        price: number;
        compareAtPrice?: number | null;
        sku?: string | null;
        inventory?: {
          trackInventory?: boolean | null;
          quantity?: number | null;
        };
        options?:
          | {
              name: string;
              value: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  sku?: string | null;
  inventory?: {
    trackInventory?: boolean | null;
    quantity?: number | null;
  };
  seo?: {
    title?: string | null;
    description?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  name: string;
  store: number | Store;
  /**
   * Parent category if this is a subcategory
   */
  parent?: (number | null) | Category;
  description?: string | null;
  image?: (number | null) | Media;
  isActive?: boolean | null;
  slug?: string | null;
  seo?: {
    title?: string | null;
    description?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags".
 */
export interface Tag {
  id: number;
  name: string;
  store: number | Store;
  description?: string | null;
  slug?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: number;
  orderNumber: string;
  store: number | Store;
  customer: number | Customer;
  status: 'pending' | 'processing' | 'completed' | 'cancelled' | 'refunded';
  items: {
    product: number | Product;
    variant?: string | null;
    quantity: number;
    price: number;
    id?: string | null;
  }[];
  subtotal: number;
  tax: number;
  shipping: number;
  discount: number;
  total: number;
  currency: string;
  shippingAddress: {
    name: string;
    line1: string;
    line2?: string | null;
    city: string;
    state: string;
    postalCode: string;
    country: string;
    phone?: string | null;
  };
  billingAddress: {
    name: string;
    line1: string;
    line2?: string | null;
    city: string;
    state: string;
    postalCode: string;
    country: string;
    phone?: string | null;
  };
  paymentInfo: {
    method: 'razorpay' | 'cod';
    transactionId?: string | null;
    status: 'pending' | 'completed' | 'failed' | 'refunded';
  };
  notes?: string | null;
  razorpay?: {
    orderId?: string | null;
    paymentId?: string | null;
    signature?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customers".
 */
export interface Customer {
  id: number;
  email: string;
  name: string;
  store: number | Store;
  /**
   * Link to user account if they have one
   */
  user?: (number | null) | User;
  phone?: string | null;
  addresses?:
    | {
        type: 'shipping' | 'billing' | 'both';
        isDefault?: boolean | null;
        name: string;
        line1: string;
        line2?: string | null;
        city: string;
        state: string;
        postalCode: string;
        country: string;
        phone?: string | null;
        id?: string | null;
      }[]
    | null;
  notes?: string | null;
  customerTags?: (number | CustomerTag)[] | null;
  marketingPreferences?: {
    emailMarketing?: boolean | null;
    smsMarketing?: boolean | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customer-tags".
 */
export interface CustomerTag {
  id: number;
  name: string;
  store: number | Store;
  description?: string | null;
  color?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "discounts".
 */
export interface Discount {
  id: number;
  /**
   * Automatically applies at checkout if conditions are met
   */
  isAutomatic?: boolean | null;
  /**
   * Discount code that customers enter at checkout
   */
  code?: string | null;
  store: number | Store;
  description?: string | null;
  discountType: 'percentage' | 'fixed' | 'shipping' | 'bxgy';
  /**
   * Percentage or fixed amount
   */
  value?: number | null;
  buyX?: {
    products?: (number | Product)[] | null;
    quantity: number;
  };
  getY?: {
    products?: (number | Product)[] | null;
    quantity: number;
    discountType: 'percentage' | 'fixed' | 'free';
    value?: number | null;
  };
  /**
   * Minimum purchase amount to apply discount
   */
  minPurchase?: number | null;
  /**
   * Maximum number of times this discount can be used (blank for unlimited)
   */
  maxUses?: number | null;
  /**
   * Limit to one use per customer
   */
  oncePerCustomer?: boolean | null;
  /**
   * Number of times this discount has been used
   */
  usesCount: number;
  /**
   * When this discount becomes active
   */
  startDate?: string | null;
  /**
   * When this discount expires
   */
  endDate?: string | null;
  /**
   * Whether this discount is currently active
   */
  active?: boolean | null;
  /**
   * Can be combined with other discounts
   */
  combinable?: boolean | null;
  /**
   * Limit discount to specific products (leave empty for all products)
   */
  eligibleProducts?: (number | Product)[] | null;
  /**
   * Limit discount to specific categories (leave empty for all categories)
   */
  eligibleCategories?: (number | Category)[] | null;
  /**
   * Limit discount to specific customers (leave empty for all customers)
   */
  eligibleCustomers?: (number | Customer)[] | null;
  /**
   * Limit discount to customers with specific tags (leave empty for all tags)
   */
  customerTags?: (number | CustomerTag)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "collections".
 */
export interface Collection {
  id: number;
  title: string;
  store: number | Store;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  products?: (number | Product)[] | null;
  image?: (number | null) | Media;
  /**
   * Whether products are automatically added based on conditions
   */
  isAutomated?: boolean | null;
  conditions?: {
    type?: ('tag' | 'category' | 'price' | 'custom') | null;
    tags?: (number | Tag)[] | null;
    categories?: (number | Category)[] | null;
    minPrice?: number | null;
    maxPrice?: number | null;
    /**
     * Advanced: Custom query parameters in JSON format
     */
    customQuery?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
  };
  /**
   * Controls whether the collection is visible to customers
   */
  isActive?: boolean | null;
  sortOrder?:
    | (
        | 'manual'
        | 'best-selling'
        | 'price-ascending'
        | 'price-descending'
        | 'title-ascending'
        | 'title-descending'
        | 'created-descending'
        | 'created-ascending'
      )
    | null;
  slug?: string | null;
  seo?: {
    title?: string | null;
    description?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pushCampaigns".
 */
export interface PushCampaign {
  id: number;
  store: number | Store;
  title: string;
  description: string;
  /**
   * Optional payload data to send with notification
   */
  data?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Optional image to display in the notification
   */
  image?: (number | null) | Media;
  status: 'draft' | 'active' | 'sent';
  /**
   * Auto-generated delivery statistics
   */
  analytics?: {
    sentTo?: number | null;
    successCount?: number | null;
    errorCount?: number | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "deviceTokens".
 */
export interface DeviceToken {
  id: number;
  /**
   * Link to user account if they have one
   */
  user?: (number | null) | User;
  store: number | Store;
  token: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home_layouts".
 */
export interface HomeLayout {
  id: number;
  name: string;
  store: number | Store;
  /**
   * Controls whether this layout is currently active
   */
  isActive?: boolean | null;
  /**
   * Collections to feature on the home page
   */
  featuredCollections?:
    | {
        collection: number | Collection;
        /**
         * Custom title for this collection (optional)
         */
        title: string;
        description: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Individual products to feature on the home page
   */
  featuredProducts?:
    | {
        product: number | Product;
        id?: string | null;
      }[]
    | null;
  /**
   * Categories to feature on the home page
   */
  categoryDisplay?:
    | {
        category: number | Category;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cart".
 */
export interface Cart {
  id: number;
  store: number | Store;
  customer?: (number | null) | Customer;
  items: {
    product: number | Product;
    variant?: string | null;
    quantity: number;
    price?: number | null;
    id?: string | null;
  }[];
  appliedDiscounts?: (number | Discount)[] | null;
  subtotal?: number | null;
  discountTotal?: number | null;
  total?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'stores';
        value: number | Store;
      } | null)
    | ({
        relationTo: 'products';
        value: number | Product;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'tags';
        value: number | Tag;
      } | null)
    | ({
        relationTo: 'orders';
        value: number | Order;
      } | null)
    | ({
        relationTo: 'customers';
        value: number | Customer;
      } | null)
    | ({
        relationTo: 'customer-tags';
        value: number | CustomerTag;
      } | null)
    | ({
        relationTo: 'discounts';
        value: number | Discount;
      } | null)
    | ({
        relationTo: 'collections';
        value: number | Collection;
      } | null)
    | ({
        relationTo: 'pushCampaigns';
        value: number | PushCampaign;
      } | null)
    | ({
        relationTo: 'deviceTokens';
        value: number | DeviceToken;
      } | null)
    | ({
        relationTo: 'home_layouts';
        value: number | HomeLayout;
      } | null)
    | ({
        relationTo: 'cart';
        value: number | Cart;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  stores?: T;
  role?: T;
  phone?: T;
  avatar?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  prefix?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "stores_select".
 */
export interface StoresSelect<T extends boolean = true> {
  name?: T;
  domain?: T;
  owner?: T;
  logo?: T;
  description?: T;
  settings?:
    | T
    | {
        currency?: T;
        timezone?: T;
        emailNotifications?: T;
      };
  businessDetails?:
    | T
    | {
        phone?: T;
        category?: T;
        subcategory?: T;
        address?:
          | T
          | {
              street1?: T;
              street2?: T;
              city?: T;
              state?: T;
              postal_code?: T;
              country?: T;
            };
      };
  active?: T;
  razorpay?:
    | T
    | {
        accountId?: T;
        defaultCommissionPercent?: T;
      };
  storeId?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  title?: T;
  store?: T;
  description?: T;
  price?: T;
  compareAtPrice?: T;
  status?: T;
  categories?: T;
  tags?: T;
  images?:
    | T
    | {
        image?: T;
        alt?: T;
        isPrimary?: T;
        id?: T;
      };
  variants?:
    | T
    | {
        title?: T;
        price?: T;
        compareAtPrice?: T;
        sku?: T;
        inventory?:
          | T
          | {
              trackInventory?: T;
              quantity?: T;
            };
        options?:
          | T
          | {
              name?: T;
              value?: T;
              id?: T;
            };
        id?: T;
      };
  sku?: T;
  inventory?:
    | T
    | {
        trackInventory?: T;
        quantity?: T;
      };
  seo?:
    | T
    | {
        title?: T;
        description?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  name?: T;
  store?: T;
  parent?: T;
  description?: T;
  image?: T;
  isActive?: T;
  slug?: T;
  seo?:
    | T
    | {
        title?: T;
        description?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags_select".
 */
export interface TagsSelect<T extends boolean = true> {
  name?: T;
  store?: T;
  description?: T;
  slug?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders_select".
 */
export interface OrdersSelect<T extends boolean = true> {
  orderNumber?: T;
  store?: T;
  customer?: T;
  status?: T;
  items?:
    | T
    | {
        product?: T;
        variant?: T;
        quantity?: T;
        price?: T;
        id?: T;
      };
  subtotal?: T;
  tax?: T;
  shipping?: T;
  discount?: T;
  total?: T;
  currency?: T;
  shippingAddress?:
    | T
    | {
        name?: T;
        line1?: T;
        line2?: T;
        city?: T;
        state?: T;
        postalCode?: T;
        country?: T;
        phone?: T;
      };
  billingAddress?:
    | T
    | {
        name?: T;
        line1?: T;
        line2?: T;
        city?: T;
        state?: T;
        postalCode?: T;
        country?: T;
        phone?: T;
      };
  paymentInfo?:
    | T
    | {
        method?: T;
        transactionId?: T;
        status?: T;
      };
  notes?: T;
  razorpay?:
    | T
    | {
        orderId?: T;
        paymentId?: T;
        signature?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customers_select".
 */
export interface CustomersSelect<T extends boolean = true> {
  email?: T;
  name?: T;
  store?: T;
  user?: T;
  phone?: T;
  addresses?:
    | T
    | {
        type?: T;
        isDefault?: T;
        name?: T;
        line1?: T;
        line2?: T;
        city?: T;
        state?: T;
        postalCode?: T;
        country?: T;
        phone?: T;
        id?: T;
      };
  notes?: T;
  customerTags?: T;
  marketingPreferences?:
    | T
    | {
        emailMarketing?: T;
        smsMarketing?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customer-tags_select".
 */
export interface CustomerTagsSelect<T extends boolean = true> {
  name?: T;
  store?: T;
  description?: T;
  color?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "discounts_select".
 */
export interface DiscountsSelect<T extends boolean = true> {
  isAutomatic?: T;
  code?: T;
  store?: T;
  description?: T;
  discountType?: T;
  value?: T;
  buyX?:
    | T
    | {
        products?: T;
        quantity?: T;
      };
  getY?:
    | T
    | {
        products?: T;
        quantity?: T;
        discountType?: T;
        value?: T;
      };
  minPurchase?: T;
  maxUses?: T;
  oncePerCustomer?: T;
  usesCount?: T;
  startDate?: T;
  endDate?: T;
  active?: T;
  combinable?: T;
  eligibleProducts?: T;
  eligibleCategories?: T;
  eligibleCustomers?: T;
  customerTags?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "collections_select".
 */
export interface CollectionsSelect<T extends boolean = true> {
  title?: T;
  store?: T;
  description?: T;
  products?: T;
  image?: T;
  isAutomated?: T;
  conditions?:
    | T
    | {
        type?: T;
        tags?: T;
        categories?: T;
        minPrice?: T;
        maxPrice?: T;
        customQuery?: T;
      };
  isActive?: T;
  sortOrder?: T;
  slug?: T;
  seo?:
    | T
    | {
        title?: T;
        description?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pushCampaigns_select".
 */
export interface PushCampaignsSelect<T extends boolean = true> {
  store?: T;
  title?: T;
  description?: T;
  data?: T;
  image?: T;
  status?: T;
  analytics?:
    | T
    | {
        sentTo?: T;
        successCount?: T;
        errorCount?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "deviceTokens_select".
 */
export interface DeviceTokensSelect<T extends boolean = true> {
  user?: T;
  store?: T;
  token?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home_layouts_select".
 */
export interface HomeLayoutsSelect<T extends boolean = true> {
  name?: T;
  store?: T;
  isActive?: T;
  featuredCollections?:
    | T
    | {
        collection?: T;
        title?: T;
        description?: T;
        id?: T;
      };
  featuredProducts?:
    | T
    | {
        product?: T;
        id?: T;
      };
  categoryDisplay?:
    | T
    | {
        category?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cart_select".
 */
export interface CartSelect<T extends boolean = true> {
  store?: T;
  customer?: T;
  items?:
    | T
    | {
        product?: T;
        variant?: T;
        quantity?: T;
        price?: T;
        id?: T;
      };
  appliedDiscounts?: T;
  subtotal?: T;
  discountTotal?: T;
  total?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}